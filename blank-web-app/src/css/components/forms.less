@import "../variables";
@import "../helpers/typography";
@import "../helpers/mixins";
@import "../helpers/vendor-prefixes";

input[type="text"],
input[type="password"],
select,
textarea {
  width: 100%;
  color: @lightText;
  background: transparent none;
  border: none;
  outline: none !important;
  box-shadow: none;
  border-bottom: 1px solid @lightDivider;
  &:focus {
    border-bottom: 1px solid @baseColor;
    box-shadow: 0 1px 0 0 @baseColor;
  }
  &:disabled {
    border-bottom: 1px dashed @lightDivider;
  }

  //Rules must be divided, not comma-separated
  &::-webkit-input-placeholder {
    color: @lightDisabledText;
  }
  &::-moz-placeholder {
    color: @lightDisabledText;
  }
  &:-ms-input-placeholder {
    color: @lightDisabledText;
  }
}

.form-field {
  &.fixed-width {
    width: 300px;
  }

  span.error {
    display: inline-block;
    position: absolute;
    right: 0;
    bottom: -1px;
    color: @lightSecondaryText;
    font-size: @fs-caption;
    opacity: 0;
  }

  .simple-label {
    & > label {
      color: @formLabelColor;
      font-weight: @formLabelWeight;
      text-transform: @formLabelTextTransform;
    }
    .change-indication {
      font-size: @fs-labels;
      vertical-align: top;
    }
  }

  &.touched {
      input {
          //border-left: 3px solid green;
      }
  }

  &.dirty {
      input {
          //border-right: 3px solid red;
      }
  }

  &.invalid.touched {
    .simple-label > label {
      color: @lightErrorText !important;
    }

    span.error {
      opacity: 1;
      color: @lightErrorText;
    }

    input[type="text"],
    input[type="password"],
    select,
    textarea {
      &,
      &:focus {
        border-color: @lightErrorText;
        box-shadow: 0 1px 0 0 @lightErrorText;
      }
    }
  }

  &.focused {
    .simple-label > label {
      color: @baseColor600;
    }
    span.error {
      opacity: 1;
    }
  }

  &.header-control {
    position: relative;
    label {
      font-weight: 200;
      color: @darkSecondaryText !important;
    }
    input {
      padding: 2px 0;
    }
    span.error {
      bottom: -16px;
      right: 10px;
      color: @darkSecondaryText;
    }
  }
}

.dark {
  input[type="text"],
  input[type="password"],
  select,
  textarea {
    color: @darkText;
    border-bottom: 1px solid @darkDivider;
    &:focus {
      border-bottom: 1px solid #fff;
    }
    &:disabled {
      border-bottom: 1px dashed @darkDivider;
    }

    //Rules must be divided, not comma-separated
    &::-webkit-input-placeholder {
      color: @darkDisabledText;
    }
    &::-moz-placeholder {
      color: @darkDisabledText;
    }
    &:-ms-input-placeholder {
      color: @darkDisabledText;
    }
  }
  span {
    color: @darkText;
  }

  & > .form-field.invalid.touched {
    .simple-label > label {
      color: @darkErrorText !important;
    }

    span.error {
      opacity: 1;
      color: @darkErrorText;
    }

    input[type="text"],
    input[type="password"],
    select,
    textarea {
      &,
      &:focus {
        border-color: @darkErrorText;
        box-shadow: 0 1px 0 0 @darkErrorText;
      }
    }
  }
}

select {
  -moz-appearance: none;
  -webkit-appearance: none;
  -ms-appearance: none;
  & ~ i.arrow {
    position: absolute;
    bottom: 2px;
    right: 0;
    z-index: -1;
  }
  &:-moz-focusring {
    color: transparent;
    text-shadow: 0 0 0 #000;
  }
}

input[type="checkbox"] {
  cursor: pointer;
  border: none;
  box-shadow: none !important;
}

pre {
  min-height: 70px;
  overflow: auto;
  background-color: @grey200;
  padding: 10px;
  color: @lightSecondaryText;
  white-space: pre-wrap;
}

.form-control {
  padding: 8px 0 4px 0;
  line-height: 20px;
  border-radius: 0;
}

.select-control {
  position: relative;
  //Do not remove! Creates new z-context for element!
  z-index: 0;
}

.editor-form,.pd-filters {
  //max-width: 950px;
  margin-top: 24px;

  .form-field {
    position: relative;
    margin-bottom: 15px;
    padding-bottom: 14px;
    text-align: left;
    & > label,
    .simple-label > label {
      margin-bottom: 0;
    }
    & > p {
      margin-top: 8px;
      margin-bottom: 0;
    }
  }
  .fields-wrapper {
    max-width: 950px;
    & > .form-field {
        display: inline-block;
        min-width: 100%;
        max-width: 100%;
        vertical-align: top;
        //z-index: 1;
    }
  }

  .form-field.checkbox-control {
    display: inline-flex;
    align-items: center;

    label,
    .simple-label {
      display: inline-block;
      margin-left: 2px;
      cursor: pointer;
    }
    .checkbox {
      color: @accentColor;
      margin-left: -1px;
      cursor: pointer;
      &.disabled {
        color: @lightDisabled;
        cursor: default;
      }
      &.focused {
        background-color: lighten(@baseColor, 40);
      }
      &.focused.invalid {
        background-color: lighten(@lightErrorText, 30);
      }
    }
    span,
    .checkbox {
      .no-select();
    }
    input[type="checkbox"] {
      width: 0;
      opacity: 0;
    }
  }

  .radio-control {
    display: inline-flex !important;
    align-items: center;
    //padding-bottom: 14px;

    label {
      margin-left: 6px;

      cursor: pointer;
    }
    .option {
      margin-right: 24px;
      &:last-of-type {
        margin-right: 0;
      }
    }

    .radio {
      color: @accentColor;
      margin-left: -1px;
      cursor: pointer;
      &.disabled {
        color: @lightDisabled;
        cursor: default;
      }
      &.focused {
        background-color: lighten(@baseColor, 40);
      }
      &.focused.invalid {
        background-color: lighten(@lightErrorText, 30);
      }
    }
    label,
    input {
      .no-select();
    }
  }

  .actions-control {
    margin-top: -14px;
    & > button,
    & > .btn,
    & > a {
      margin-top: 14px;
      margin-left: 0 !important;
      margin-right: 14px;
    }
  }

  &.multi-column {
    .fields-wrapper {
        & > .form-field {
            min-width: 300px;
            margin-right: 30px;
        }
        & > .form-field > textarea {
            width: 630px;
        }
    }
    .checkbox-control {
      padding-top: 21px;
    }
    .radio-control {
      //padding-top: 28px;
      //padding-bottom: 19px;
    }

    .object-input {
      .checkbox-control {
        padding-top: 0;
      }
    }
  }

  textarea, pre {
    resize: none;
  }

  .group-label {
    margin-top: 25px;
    margin-bottom: 14px;
    span,
    label {
      color: @formGroupColor;
      font-weight: @formGroupWeight;
      font-size: @fs-title;
      text-transform: @formGroupTextTransform;
    }
  }

  label, span {
    i[data-tooltip] {
      margin-left: 8px;
      color: #333;
    }

    i[data-tooltip]::after {
      min-width: 250px;
      background-color: @darkBackground;
      color: @darkText;
      content: attr(data-tooltip);
      margin-left: 6px;
      margin-top: -18px;
      opacity: 0;
      padding: 3px 7px;
      position: absolute;
      visibility: hidden;
      transition: all 0.25s ease-in-out;
      z-index: 3;
    }

    i[data-tooltip]:hover::after {
      opacity: 1;
      visibility: visible;
    }
  }


  .check-list {
    padding-top: 10px;

    &.inline {
        .check-list-item {
            display: inline-flex;
            margin-right: 32px;
            margin-top: 0;
        }
    }
    .check-list-item {
      margin-top: 7px;
      align-items: center;
      label {
        margin-left: 6px;
        text-overflow: ellipsis;
        white-space: nowrap;
        overflow: hidden;
        font-size: @fs-caption;
      }
    }
  }

  &.fixed-buttons {
    padding-bottom: 65px;
  }
  .fixed-buttons {
    position: absolute;
    bottom: 0;
    left: 0;
    right: 0;
    z-index: 1;
    .container {
      padding-bottom: 15px;
      background-color: @paperColor;
      box-shadow: 25px -20px 25px @paperColor;
    }
    .btn-link {
      background-color: #ffffff;
      margin-left: 10px;
    }
    .saving-loader {
      display: inline-block;
      vertical-align: sub;
    }
  }

  .action-buttons {
    display: flex;
    flex-direction: row-reverse;
    justify-content: flex-start;
    align-items: center;
  }

  .saving-loader {
    margin: 0;
    padding: 8px 0;
    height: 36px;
  }

  .buttons-right {
    text-align: right;
  }

  .object-input {
    display: block !important;
    margin-left: -40px;
    & > * {
      margin-left: 40px;
    }
    & > .list-items {
        margin-left: 0;
        //overflow-x: auto;
    }
    & > button.first {
      margin-left: 32px;
    }
    .list-item-divider {
      position: relative;
      height: 14px;
      margin-top: -14px;
      margin-left: 0;
      z-index: 1000;
      .transition(height .2s linear);
    }
    &.drag {
      .list-item-wrapper {
        .drag-handle {
          display: none !important;
        }
      }
    }
    .list-item-wrapper {
      margin-left: 0;
      padding-left: 40px;
      &.first {
        .drag-handle {
          top: 12px;
        }
      }
      &:hover {
        .drag-handle {
          display: inherit;
        }
      }
      &.drag,
      &.drag:hover {
        position: absolute;
        margin-left: 40px;
        background-color: #f0f4c3;
        border: 1px dashed #555;
        border-radius: 2px;
        z-index: 1100;
        .transition(margin-left .2s linear);
        &.wd {
          .transition(all .2s linear);
          margin-left: 0;
          background-color: inherit;
          border: none;
          left: 0 !important;
        }

        .simple-label {
          display: none;
        }
      }

      .drag-handle {
        display: none;
        position: absolute;
        top: 0;
        left: 0;
        padding: 7px;
        cursor: pointer;
        i {
          color: @lightSecondaryText;
          cursor: pointer;
        }
        &:hover {
          display: inherit;
          i {
            color: @lightText;
          }
        }
      }
    }
    .list-item {
      display: flex;
      //align-items: baseline;
      position: relative;
      max-width: 100%;
      padding: 0;
      &.first .list-item-props-wrapper,
      .list-item-props-wrapper {
        overflow: hidden;
        padding-top: 14px;
        border-bottom: 2px solid @lightDivider;
        .simple-label {
          position: inherit;
        }
        label {
          //display: inline-block;
        }
      }
      label,
      .tooltip {
        display: none;
        font-size: @fs-caption;
      }
      .change-indication {
        position: absolute;
        right: 0;
      }
      &.first {
        border-top-width: 1px;
        margin-top: 14px;
        padding-top: 14px;
        .simple-label {
          position: absolute;
          bottom: 100%;
          left: 0;
          right: 0;
          label {
            display: inline-block;
          }
          .tooltip {
            display: inline-block;
            .actuator {
              font-size: 16px;
            }
          }
        }
      }
      & > div:first-of-type {
        margin-left: 0;
      }
      span.group {
        font-size: @fs-labels;
        font-weight: 500;
        color: @lightSecondaryText;
        margin: 0 0 24px 0;
      }
      .list-item-input {
        display: inline-block;
        width: 300px;
        margin-bottom: 4px;
        margin-right: 30px;
        position: relative;
        flex-shrink: 1;
        &.last {
          margin-right: 0;
        }
        &.checkbox {
          width: 50px;
        }
      }
      .checkbox-control {
        align-items: flex-start;
        & > span {
          display: block;
          padding-top: 7px;
        }
        .simple-label, .simple-label > label {
            margin-left: 0;
        }
      }
    }
    .list-item-remove {
      margin-left: 10px;
      color: @grey400;
    }
    .list-item-remove:hover {
      color: @lightErrorText;
    }
    label + button {
      margin-top: 15px;
    }
    & > button {
      display: block;
    }
  }
}

input[type="text"].header-input {
  font-size: @fs-title;
}

.header-input {
  font-weight: 300;
  & + span {
    visibility: hidden;
    display: inline-block;
    margin-left: 5px;
  }
  & + span.changed {
    visibility: visible;
  }
}

.back-link {
  display: block;
  position: absolute;
  margin-right: 24px;
  right: 100%;
  bottom: 0;
  cursor: pointer;
  text-decoration: none !important;
  color: @lightSecondaryText;
  i {
    vertical-align: sub;
  }
  @media (max-width: 480px) {
    margin-right: 7px;
  }
}

.generate-columns(20);

.generate-columns(@n, @i: 1) when (@i =< @n) {
  @k: (@i * 5);
  div[data-flex="@{k}"] {
    flex-basis: (@i * 5%);
  }
  .generate-columns(@n, (@i + 1));
}